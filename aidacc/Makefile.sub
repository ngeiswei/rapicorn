# Rapicorn			- non-recursive Makefile

AIDACC_INSTALLABLE	= $(top_builddir)/aidacc/aidacc

# == aidacc files ==
aidacc_imports = $(strip		\
	aidacc/AuxData.py		\
	aidacc/CxxStub.py		\
	aidacc/Decls.py			\
	aidacc/ExtractDocs.py		\
	aidacc/GenUtils.py		\
	aidacc/PrettyDump.py		\
	aidacc/TypeMap.py		\
	aidacc/yapps2runtime.py		\
)
aidacc_generated = $(strip		\
	aidacc/Parser.py		\
	aidacc/TmplFiles.py		\
)
aidacc_templ_files = $(strip		\
	aidacc/CxxStub-client.cc	\
	aidacc/CxxStub-server.cc	\
)
aidacc_private_files = $(strip		\
	aidacc/plic.py 			\
	aidacc/Parser.g			\
)
EXTRA_DIST += $(aidacc_private_files)

# == aidacc imports ==
aidacc_installdir		= $(libdir)/rapicorn-@MAJOR@/aidacc
aidacc_install_PYTHON		= $(aidacc_imports)
nodist_aidacc_install_PYTHON	= $(aidacc_generated)

# == aidacc executable ==
AIDACC_INTERN_CONFIG	 = "aidaccpydir" : "${topdir}",  "AIDA_VERSION" : "${topbuildid}", "INTERN" : 1
AIDACC_INSTALL_CONFIG	 = "aidaccpydir" : "${aidacc_installdir}", "AIDA_VERSION" : "${topbuildid}"
noinst_SCRIPTS		+= $(AIDACC_INTERN)
$(AIDACC_INTERN): aidacc/plic.py $(aidacc_imports) $(aidacc_generated) aidacc/TmplFiles.py
	$(AM_V_GEN)
	$(Q) sed < $< > $@.tmp				\
	  -e '1,1s|#!/usr/bin/env python\([0-9]\+\(\.[0-9]\+\)\?\)\?|#!${PYTHON}|' \
	  -e '1,24s|^ *#@PKGINSTALL_CONFIGVARS_IN24LINES@|  ${AIDACC_INTERN_CONFIG}|'
	$(Q) chmod +x $@.tmp
	$(Q) mv $@.tmp $@
MOSTLYCLEANFILES	+= $(AIDACC_INTERN)
bin_SCRIPTS		+= $(AIDACC_INSTALLABLE)
$(AIDACC_INSTALLABLE): aidacc/plic.py $(aidacc_imports) $(aidacc_generated) aidacc/TmplFiles.py
	$(AM_V_GEN)
	$(Q) sed < $< > $@.tmp				\
	  -e '1,1s|#!/usr/bin/env python\([0-9]\+\(\.[0-9]\+\)\?\)\?|#!${PYTHON}|' \
	  -e '1,24s|^ *#@PKGINSTALL_CONFIGVARS_IN24LINES@|  ${AIDACC_INSTALL_CONFIG}|'
	$(Q) chmod +x $@.tmp
	$(Q) mv $@.tmp $@
MOSTLYCLEANFILES += $(AIDACC_INSTALLABLE)

# == TmplFiles.py ==
EXTRA_DIST += $(aidacc_templ_files)
aidacc/TmplFiles.py: $(aidacc_templ_files)
	$(AM_V_GEN)
	$(Q) (cd $(srcdir) && echo "# $@: generated from: $(aidacc_templ_files)" \
	&& for file in $(aidacc_templ_files) ; \
	    do echo -n "$$(basename $$file)" | sed 's/[^a-zA-Z0-9_]/_/g' && echo ' = """' \
	    && sed 's/\\/\\\\/g; s/"""/\\"""/g' "$$file" && echo '"""' || exit $? ; \
	done ) > $@.tmp
	$(Q) mv $@.tmp $@
MOSTLYCLEANFILES += aidacc/TmplFiles.py

# == Parser.py ==
aidacc/Parser.py: aidacc/Parser.g
	$(AM_V_GEN)
	$(Q) $(YAPPS) aidacc/Parser.g $@.tmp 2>&1 | tee $@.errors	# yapps exit code is bogus
	@! grep -q '.' $@.errors					# catch all yapps errors & warnings
	$(Q) sed < $@.tmp > $@.tmp2			\
	    -e 's/^from yapps import runtime$$//'			# Parser.g has all imports
	$(Q) mv $@.tmp2 $@ && rm -f $@.tmp $@.errors
MOSTLYCLEANFILES += aidacc/Parser.py

# == aidacc-aidacc-intern-check ==
aidacc-aidacc-intern-check:
	$(Q) $(AIDACC_INTERN) -x TypeMap --list-formats | grep -q AidaTypeMap ; eval "$$TSTDIAGNOSE"
check-local: aidacc-aidacc-intern-check

# == Post-Installation Test ==
aidacc-aidacc-installcheck:
	$(Q) PATH="$(bindir):$$PATH" $(AIDACC_INSTALLABLE) -x CxxStub -x ExtractDocs -x TypeMap --list-formats > $(TSTOUT) && \
	  grep -F -q CxxStub $(TSTOUT) && grep -F -q TypeMap $(TSTOUT) && grep -F -q ExtractDocs $(TSTOUT) ; eval "$$TSTDIAGNOSE"
	$(Q) rm -f $(TSTOUT)
installcheck-local: aidacc-aidacc-installcheck

# == aidacc cleanups ==
MOSTLYCLEANFILES += aidacc/*.py[co]
