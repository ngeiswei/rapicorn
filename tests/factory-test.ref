<Rapicorn::Window
  title="Rapidrun"
  auto_focus="1"
  id="main-test"
  visible="1"
  sensitive="1"
  toggled="0"
  retained="0"
  allow_focus="0"
  hsize_group=""
  vsize_group=""
  width="-1"
  height="-1"
  hexpand="0"
  vexpand="0"
  hspread="0"
  vspread="0"
  hshrink="0"
  vshrink="0"
  requisition="(20, 35)"
  allocation="((0, 0), 20, 35)"
  clip_area=""
  factory_context="{ id=main-test, type=main-test, impl=Rapicorn::Window }"
  >
    <Rapicorn::Alignment
      left_padding="5"
      right_padding="5"
      bottom_padding="5"
      top_padding="5"
      id="Alignment"
      visible="1"
      sensitive="1"
      toggled="0"
      retained="0"
      allow_focus="0"
      hsize_group=""
      vsize_group=""
      width="-1"
      height="-1"
      hexpand="0"
      vexpand="0"
      hspread="0"
      vspread="0"
      hshrink="0"
      vshrink="0"
      requisition="(20, 35)"
      allocation="((0, 0), 20, 35)"
      clip_area=""
      factory_context="{ id=Alignment, type=Alignment, impl=Rapicorn::Alignment }"
      >
        <Rapicorn::VBox
          homogeneous="0"
          spacing="5"
          id="VBox"
          visible="1"
          sensitive="1"
          toggled="0"
          retained="0"
          allow_focus="0"
          hsize_group=""
          vsize_group=""
          width="-1"
          height="-1"
          hexpand="0"
          vexpand="0"
          hspread="0"
          vspread="0"
          hshrink="0"
          vshrink="0"
          requisition="(10, 25)"
          allocation="((5, 5), 10, 25)"
          clip_area=""
          factory_context="{ id=VBox, type=VBox, impl=Rapicorn::VBox }"
          >
            <Rapicorn::TestContainer
              value="19"
              assert_value="19"
              assert_left="-Infinity"
              assert_right="-Infinity"
              assert_bottom="-Infinity"
              assert_top="-Infinity"
              assert_width="-Infinity"
              assert_height="-Infinity"
              epsilon="1e-08"
              paint_allocation="1"
              fatal_asserts="0"
              accu=""
              accu_history=""
              id="RapicornTestWidget"
              visible="1"
              sensitive="1"
              toggled="0"
              retained="0"
              allow_focus="0"
              hsize_group=""
              vsize_group=""
              width="10"
              height="10"
              hexpand="0"
              vexpand="0"
              hspread="0"
              vspread="0"
              hshrink="0"
              vshrink="0"
              requisition="(10, 10)"
              allocation="((5, 5), 10, 10)"
              clip_area=""
              factory_context="{ id=RapicornTestWidget, type=RapicornTestWidget, impl=Rapicorn::TestContainer }"
            >
            </Rapicorn::TestContainer>
            <Rapicorn::TestContainer
              value="17"
              assert_value="17"
              assert_left="-Infinity"
              assert_right="-Infinity"
              assert_bottom="-Infinity"
              assert_top="-Infinity"
              assert_width="-Infinity"
              assert_height="-Infinity"
              epsilon="1e-08"
              paint_allocation="1"
              fatal_asserts="0"
              accu=""
              accu_history=""
              id="RapicornTestWidget"
              visible="1"
              sensitive="1"
              toggled="0"
              retained="0"
              allow_focus="0"
              hsize_group=""
              vsize_group=""
              width="10"
              height="10"
              hexpand="0"
              vexpand="0"
              hspread="0"
              vspread="0"
              hshrink="0"
              vshrink="0"
              requisition="(10, 10)"
              allocation="((5, 20), 10, 10)"
              clip_area=""
              factory_context="{ id=RapicornTestWidget, type=RapicornTestWidget, impl=Rapicorn::TestContainer }"
            >
            </Rapicorn::TestContainer>
        </Rapicorn::VBox>
    </Rapicorn::Alignment>
</Rapicorn::Window>
